# This will create a Contact (NPSP will create the corresponding Household Account)
# Then create 2 Organization Accounts and the corresponding Affiliations with the Contact

# Run this to generate data in a scratch org:
# cci task run generate_and_load_from_yaml -o generator_yaml ../Snowfakery-new/examples/npsp/Affiliations_Contact_npsp.recipe.yml -o num_records 10 -o num_records_tablename Contact --org qa

# Run this to generate records in an output JSON file:
# snowfakery ./Affiliations_npsp.recipe.yml --output-format=json --output-file=foo.json

# First, let's create the Contact
- object: Contact
  nickname: Contact
  count: 1
  fields: 
    FirstName:
      fake: FirstName
    LastName:
      fake: LastName
    HomePhone:
      fake: phone_number
    npe01__WorkPhone__c:
      fake: phone_number
    MobilePhone:
      fake: phone_number
    npe01__PreferredPhone__c:
      random_choice:
        - Home
        - Work
        - Mobile
    npe01__HomeEmail__c:
      fake: email
    npe01__WorkEmail__c:
      fake: email
    npe01__Preferred_Email__c:
      random_choice:
        - Personal
        - Work
        - Alternate
    MailingStreet:
      fake: street_address
    MailingCity:
      fake: city
    MailingState:
      fake: state
    MailingPostalCode:
      fake: postalcode
    MailingCountry: USA

# Now we can create the Organization Accounts (2 per Contact) 
- object: Account
  count: 2
  nickname: Organization
  fields:
    Name:
      fake: company
    BillingStreet:
      fake: street_address
    BillingCity:
      fake: city
    BillingState:
      fake: state
    BillingPostalCode:
      fake: postalcode
    BillingCountry: USA
    Description:
      fake: catch_phrase
    Phone:
      fake: phone_number
    Website: 
      fake: uri
    NumberOfEmployees:
      random_number:
        min: 200
        max: 20000
    RecordType: Organization

  # Finally, let's create the Affiliations (1 for each Organization)
  friends:
    - object: npe5__Affiliation__c
      count: 1
      nickname: Affiliation
      fields: 
        npe5__StartDate__c:
          date_between:
            start_date: -2y
            end_date: -3m
        npe5__Status__c: 
          random_choice:
            - Current
            - Former
        npe5__EndDate__c:
          if:
            - choice:
                when: ${{npe5__Status__c=='Former'}}
                pick:
                  date_between:
                    start_date: -3m
                    end_date: -1d
            - choice:
                pick: null
        npe5__Contact__c:
          reference: Contact
        npe5__Organization__c:
          reference: Organization
