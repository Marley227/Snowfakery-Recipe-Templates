## NPSP Individual Major Donors Example
### ------------- [          ORDER OF INSERT         ]------------ ###
# ...
### ----------- [ Contact_npsp.recipe.yml Summary ]---------- ###
# This recipe creates data related to Individual Major Donors in NPSP.  
# Each Household Account will have one Contact, who is the primary Contact for the household. 
# Soft credits are not included in this scenario.
# Major Gift Opportunities are created with Amounts over $10,000.  
# Opportunities with a Close Date in the past will be Closed Won; others will have a random StageName. 
# An Engagement Plan Template with randomized Engagement Plan Tasks are generated.
# 
#
#
### ----------- [               CLI RUN                ]---------- ###
# Use this command to run this recipe in a Salesforce scratch org called "dev":
# cci task run snowfakery --recipe snowfakery_samples/npsp/Individual_Major_Donors_npsp.recipe.yml --org dev
#
# Use this command to run this recipe 100 times in a Salesforce scratch org called "dev":
# cci task run snowfakery --recipe snowfakery_samples/npsp/Individual_Major_Donors_npsp.recipe.yml --org dev --run-until-recipe-repeated 100
#
# Use this command to run this recipe locally and output to a JSON file called output.json
# snowfakery --output-format json --output-file snowfakery_samples/temp/output.json snowfakery_samples/npsp/Individual_Major_Donors_npsp.recipe.yml
#
# Use this command to run this recipe locally and output to a JSON file called output.json, targeting 100 Contact records created
# snowfakery --output-format json --output-file snowfakery_samples/temp/output.json snowfakery_samples/npsp/Individual_Major_Donors_npsp.recipe.yml --target-number 100 Contact
#
### ----------- [            Recipe Starts             ]---------- ###


# Define Opportunity Amount ranges
- var: amount_min # minimum Amount value
  value: 10000
- var: amount_max # maximum Amount value
  value: 500000
- var: step_amount # ensure the amount is rounded off to clean numbers based on the value provided
  value: 5000



- object: Account
  count: 1
  nickname: MajorDonorHHAccount
  fields:
    name: Household
    RecordType: HH_Account



- object: Contact #NPSP will set this Contact as Primary for the household and add a donor contact role and hard credit for all Opportunities
  count: 1
  nickname: MajorDonorContact
  fields:
    AccountId: 
      reference: MajorDonorHHAccount
    FirstName: 
      fake: FirstName
    LastName: 
      fake: LastName



- object: Opportunity
  count: 
    random_number: 
      min: 1
      max: 9
  nickname: MajorGiftOpportunity
  fields:
    AccountId:
      reference: MajorDonorHHAccount
    Name: Major Donor Opportunity #if the NPSP Naming Convention feature is activated, this name will be replaced
    Amount:
      random_number:
        min: ${{amount_min}}
        max: ${{amount_max}}
        step: ${{step_amount}}
    RecordType: MajorGift
    CloseDate:
      date_between:
        start_date: -8y
        end_date: +1y #assuming major gifts are planned in the coming year
    StageName: 
      if:
        - choice:
            when: ${{date(CloseDate) <= today}}
            pick: Closed Won #assumptions: (a) there are no past Closed Lost Opportunities (b) Close Date is accurate
        - choice:
            pick:
              random_choice: # Use the values from the Major Gift Sales Process
                - Identification
                - Qualification
                - Cultivation
                - Solicitation
                - Proposal/Review
                - Pledged # NPSP Sales Process does not include the Pledged value by default, but this should still populate Opportunities with this Stage
                - Verbal Commitment
                - Closed Lost
    npe01__Do_Not_Automatically_Create_Payment__c: TRUE #because we are creating them from this recipe
  friends:
    - object: npe01__OppPayment__c
      count:
        if:
          - choice: # If the Opportunity is Pledged, create 4 Payments
              when: ${{MajorGiftOpportunity.StageName=='Pledged'}}
              pick: 4
          - choice: # If the Opportunity is not Pledged, create just 1 Payment
              pick: 1
      fields:
        npe01__Opportunity__c:
          reference: MajorGiftOpportunity
        npe01__Payment_Amount__c:
          if:
            - choice: # If the Opportunity is Pledged, divide the Payment Amount by 4 to split it evenly between the four Payments
                when: ${{MajorGiftOpportunity.StageName=='Pledged'}}
                pick: ${{MajorGiftOpportunity.Amount / 4}}
            - choice: # If only one Payment, Payment Amount = Opportunity Amount
                pick: ${{MajorGiftOpportunity.Amount}}
        # If only one Payment, Payment Date = Opportunity Close Date.
        # If more than one Payment, space out the four Payment Dates in 4 month installments, with the final Payment being the Opportunity Close Date.
        npe01__Payment_Date__c: ${{date(MajorGiftOpportunity.CloseDate) - relativedelta(months=child_index * 4)}}
        npe01__Scheduled_Date__c: ${{npe01__Payment_Date__c}}
        npe01__Paid__c:
          if:
            - choice: # this assumes there are no overdue unpaid Payments
                when: ${{date(npe01__Payment_Date__c) <= today}}
                pick: TRUE
            - choice:
                pick: FALSE


- object: npsp__Engagement_Plan_Template__c
  nickname: MajorGivingEngagementPlanTemplate
  count: 1
  fields:
    Name: Major Giving Engagement Plan
    npsp__Description__c: Follow-up tasks for major donors
    #npsp__Default_Assignee__c:
    npsp__Skip_Weekends__c: true
    npsp__Reschedule_To__c: Monday
  friends:
    - object: npsp__Engagement_Plan_Task__c
      fields:
        npsp__Engagement_Plan_Template__c:
          reference: MajorGivingEngagementPlanTemplate
        Name: Call donor to thank them
        npsp__Type__c: Call
        npsp__Priority__c:
          random_choice:
            - High
            - Medium
            - Low
        npsp__Status__c:
          random_choice:
            - Not Started
            - In Progress
            - Completed
            - Waiting on someone else
            - Deferred
        npsp__Send_Email__c: false
        npsp__Reminder__c: false
        npsp__Comments__c:
          fake: Paragraph
        npsp__Days_After__c: 2
    - object: npsp__Engagement_Plan_Task__c
      fields:
        npsp__Engagement_Plan_Template__c:
          reference: MajorGivingEngagementPlanTemplate
        Name: Schedule in-person meeting
        npsp__Type__c: Meeting
        npsp__Priority__c:
          random_choice:
            - High
            - Medium
            - Low
        npsp__Status__c:
          random_choice:
            - Not Started
            - In Progress
            - Completed
            - Waiting on someone else
            - Deferred
        npsp__Send_Email__c: false
        npsp__Reminder__c: false
        npsp__Comments__c:
          fake: Paragraph
        npsp__Days_After__c: 14
    - object: npsp__Engagement_Plan_Task__c
      fields:
        npsp__Engagement_Plan_Template__c:
          reference: MajorGivingEngagementPlanTemplate
        Name: Invite to gala
        npsp__Type__c: Email
        npsp__Priority__c:
          random_choice:
            - High
            - Medium
            - Low
        npsp__Status__c:
          random_choice:
            - Not Started
            - In Progress
            - Completed
            - Waiting on someone else
            - Deferred
        npsp__Send_Email__c: false
        npsp__Reminder__c: false
        npsp__Comments__c:
          fake: Paragraph
        npsp__Days_After__c: 30



- object: npsp__Engagement_Plan__c #The authors chose to map this Engagement Plan to the Account.  If you want to map this to a Contact or Opportunity, comment out the Account reference and uncomment the relationship for the intended object
  count: 1
  fields:
    npsp__Account__c:
      reference: MajorDonorHHAccount
    #npsp__Contact__c: uncomment this if you want to map to a Contact
      #reference: MajorDonorContact
    #npsp__Opportunity__c: uncomment this line if you want to map to an Opportunity
      #reference: MajorGiftOpportunity
    npsp__Engagement_Plan_Template__c:
      reference: MajorGivingEngagementPlanTemplate
